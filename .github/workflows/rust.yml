name: Rust CI
on:
  push:
    paths:
      - rust/**

defaults:
  run:
    shell: bash
    working-directory: rust

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: x86_64-unknown-linux-musl

      - name: Configure sccache env var and set build profile to ephemeral build
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTFLAGS='--cfg profile=ephemeral-build'" >> $GITHUB_ENV

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4

      - name: Run build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target x86_64-unknown-linux-musl --release

      - name: Run test
        uses: actions-rs/cargo@v1
        with:
          command: test

  # cargo-tests:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 20
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v3
  #     - name: Install Rust toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         override: true
  #     - uses: Swatinem/rust-cache@v2.7.2
  #       with:
  #         cache-on-failure: true
  #     - name: cargo test
  #       run: cargo test --all --all-features

  # cargo-lint:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 20
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v3
  #     - name: Install Rust toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         profile: minimal
  #         components: rustfmt, clippy
  #         override: true
  #     - uses: Swatinem/rust-cache@v1
  #       with:
  #         cache-on-failure: true
  #     - name: cargo fmt
  #       run: cargo +nightly fmt --all -- --check
  #     - name: cargo clippy
  #       run: cargo +nightly clippy --all --all-features -- -D warnings
